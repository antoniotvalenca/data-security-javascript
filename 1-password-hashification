BCRYPT E HASHIFICAÇÃO DE SENHAS

-> Maneira de armazenar senhas em formato de hash

-> Após o armazenamento, toda vez que for feito o login,
   o banco de dados fará um "compare" da senha digitada com
   o hash, checando se o hash corresponde àquela string
   
-> npm i bcrypt

-> No MODEL de USER:
        -> hooks: {
                beforeCreate: async user => {
                    if (user.password_hash) {
                        user.password_hash = await bcrypt.hash(user.password_hash, 9)
                    }
                }
            }
        -> Essa função, basicamente, vai hashificar a string passada num salt de número 9,
        antes de passá-la para o banco
        
-> No SERVICE/CONTROLLER de LOGIN
        -> compareSync(data.password, user.password_hash);
              -> vai fazer a comparaçao da password passado no data vs. a hash do banco de dados


EM SUMA:
** bcrypt.hash(password, 9) => cria o hash daquela password **
** bcrypt.compareSync(passwordEmString, passwordEmHash) => compara e confirma se corresponde ou não **
