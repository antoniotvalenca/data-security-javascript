const loginUser = async data => {
        let user = await User.findOne({
            where: {
                email: data.email
            }
        });

        const FAKE_PASSWORD = '$2b$09$F5D0n0DPqqTtnovD9fQES.0qYbAgvIdAkZRX.sWCIZFN9ITfkQEBqa332312';
        let isFakeUser = false;

        if (!user) {
            isFakeUser = true;
            user = {
                password_hash: FAKE_PASSWORD
            }
        };

        const validPassword = compareSync(data.password, user.password_hash);

        if (!validPassword || isFakeUser) throw 'E-mail ou senha inválidos';

        return jwt.sign({
            id: user.id,
            name: user.name,
            email: user.email
        }, process.env.TOKEN_SECRET, {
            expiresIn: process.env.TOKEN_EXPIRATION
        });
    };
    
   
-> Criamos um fake user, no caso de erro de credenciais, para equalizar a velocidade de resposta (ms) entre uma credencial certa, uma parcialmente certa e
uma errada. Neste caso, independente do cenário, todas ficariam com 50ms em média
